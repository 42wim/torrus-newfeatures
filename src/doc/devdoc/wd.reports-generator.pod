#  Copyright (C) 2002  Stanislav Sinyagin
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

# $Id$
# Stanislav Sinyagin <ssinyagin@yahoo.com>
#
#

=head1 Torrus Working Draft: Report generator architecture

Status: in pre-design phase.
Date: Aug 12 2005; Last revised:

=head2 Definitions

=over 4

=item * Service ID

Service ID is a unique alphanumeric identifier corresponding to a
single datasource, such as counter or gauge. For a network interface, for
example, there are usually two service IDs: one for input, and the other
for output traffic.

=item * Repository

Repository corresponds to an abstract data storage, usually an SQL
database. It is identified by name, and is capable of retrieving
statistical data for a set of service IDs, for a given period.

=item * Vector

Vector is a linear set of numeric data, corresponding to one service ID
for a given period, with a fixed interval (or step). Data points are marked
with timestapms that are always aligned by the step value:
(timestamp mod step == 0) is always true, where timestamp is the UNIX time
of a data sample.

Vector definition specifies how the data is fit into
these intervals. For example, if several traffic rate values are in the
same interval, the maximum value gets into the vector.

Each data point in the vector is a double precision floating point,
or undefined.

A vector can be adjusted to new start, end, and step values.

Vectors of the same step and period support a number of operations,
such as:

=over 8

=item * Consolidation

Several vectors are consolidated into one. Several data storage may contain
data for the same service ID, with missing data for different periods,
due to network or server problems. Consolidated vector would have
data from the source vectors: defined value is taken over undefined, and
of several defined values we choose one, by specified rules: either
the maximum value, or average.

=item * Fill the gaps

Undefined data points are replaced with some values: either zero,
average, minimum, or maximum.

=item * Arithmetics

Two vectors may be summed. A vector may be multiplied by a number.
Maximum, average, minimum values can be retrieved. 

=item * Vector quality

Let C<N> be the vector length, C<U> the number of undefined values, and C<L>
 - the maximum distance between two defined values. For a predefined parameter
0E<LT>C<a>E<LT>1, the quality measure is:

  Q = 1 - (a * (U/N) + (1-a) * (L/N))

=item * Percentile

For a given percentile degree C<P> (usually P=95), the function calculates
smallest number that is greater than C<P%> of the numbers in a given set.


=back

=back



=head2 Report definition file

This XML file defines the data manipulation for specific service IDs
and the output values. The order in which vector, scalar, and output
statements appear in this XML is important: the entities can refer to
other entities only if they are previously defined.


 <report name="monthly-traffic" return="95pc_max">
   <!-- retrieve data from two data storages and take the maximum of
        available values. Data is aligned into 5-minute intervals.
        The start and end of the report is defined in the program
        that launches the report. -->

   <report-arguments>
     <arg name="SVCIDIN" type="vector"/>
     <arg name="SVCIDOUT" type="vector"/>
     <arg name="START" type="scalar"/>
     <arg name="END" type="scalar"/>
   <report-arguments>

   <vector name="in_bps">
     <param name="vector-type" value="expression"/>
     <param name="rpn-expr"/>
       {SVCIDIN},8,*
     </param>     
   </vector>

   <vector name="out_bps">
     <param name="vector-type" value="expression"/>
     <param name="rpn-expr"/>
       {SVCIDOUT},8,*
     </param>     
   </vector>

   <scalar name="95pc_max">
     <param name="rpn-expr"/>
       {in_bps},95,PERCENTILE,{out_bps},95,PERCENTILE,MAX
     </param>          
   </scalar>

 </report>


=head1 Author

Copyright (c) 2005 Stanislav Sinyagin E<lt>ssinyagin@yahoo.comE<gt>
